---
title: "Grade analysis"
author: "Amandine Godefroy"
format: html
---

```{r}
#| message: false
#| warning: false
here::i_am("TP4.Rproj")
library(here)
library(vroom)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
```

# Question 1

Data loading
```{r}
#| message: false
grades <- vroom(here("grades.csv"))
```

# Question 2

```{r}
stats_exam <- grades |> summarize(min_exap = min(Exam, na.rm = TRUE), max_exam = max(Exam, na.rm = TRUE), avg_exam = mean(Exam, na.rm = TRUE), med_exam = median(Exam, na.rm = TRUE))

knitr::kable(stats_exam)
```

# Question 3

```{r}
no_exam <- grades |> count(is.na(Exam))
```
There are `r no_exam[2,2]` students who did not take the exam.

# Question 4

Graphical representation of the distribution of grades at the exam.
```{r}
Exam_woNA <- grades |> filter(!is.na(Exam))

Exam_woNA |> ggplot(aes(x = Exam)) +
  geom_histogram(binwidth = 0.5)
```

## Question 5

```{r}
nber_stdts_group <- grades |> count(Group) |> group_by(Group)

knitr::kable(nber_stdts_group)
```

# Question 6

```{r}
grades |> ggplot(aes(x = Group, fill = Group)) +
  geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
# Question 7

```{r}
ggplot(grades, aes(x = Exam, fill = Group)) +
  geom_histogram(bins = 20) +
  geom_rug(alpha = 0.03, linewidth = 1.5) +
  facet_wrap(~Group)
```

```{r}
ggplot(grades, aes(x = Exam, y=Group, fill = Group)) +
  geom_boxplot()
```

# Question 8

```{r}
na_exam_per_group <- grades %>%
  group_by(Group) %>%
  summarise(nber_na_exam = sum(is.na(Exam)))

knitr::kable(na_exam_per_group)
```
# Question 9

```{r}
all_Groups <- inner_join(grades, na_exam_per_group, by=join_by(Group))

ggplot(all_Groups, aes(x = Group, y = nber_na_exam)) +
  geom_col()
```
# Question 10

```{r}
new_grades <- grades %>% pivot_longer(
  cols = Exam | starts_with("MCQ_") | starts_with("Online_MCQ_"),
  names_to = "name",
  values_to = "value"
)
```

# Question 11

```{r}
na_exam_per_student <- new_grades %>%
  group_by(Id) %>%
  summarise(nber_na_grades = sum(is.na(value)))

knitr::kable(na_exam_per_student)
```
# Question 12

```{r}
ggplot(na_exam_per_student, aes(x = nber_na_grades )) + geom_histogram()
```
```{r}
ggplot(na_exam_per_student, aes(x = nber_na_grades))+ geom_density(bw = "SJ") + labs(title = "distribution of the number of missing grades per student")
```

# Question 13

```{r}

exam_new_grades <- new_grades |> filter(str_starts(name, "Exam"))

na_exam_per_group2 <- exam_new_grades %>% group_by(Group) %>%
  summarise(nber_na_exam2 = sum(is.na(value)))

knitr::kable(na_exam_per_group2)
```

# Question 14

```{r}
online_test_new_grades <- new_grades |> filter(str_starts(name, "Online_MCQ_"))

na_online_test_per_student <- online_test_new_grades %>%
  group_by(Id) %>%
  summarise(nber_na_online_test = sum(is.na(value)))

knitr::kable(na_online_test_per_student)
```

# Question 15
```{r}
grades_with_na_online_test <- inner_join(grades, na_online_test_per_student, by = join_by(Id))
```

```{r}
exam_vs_missing_online <- new_grades %>%
  rowwise() %>%
  mutate(Missing_Online = sum(c_across(starts_with("Online_MCQ_")), na.rm = TRUE)) %>%
  group_by(Missing_Online) %>%
  summarise(Average_Exam_Grade = mean(Exam, na.rm = TRUE))

ggplot(exam_vs_missing_online, aes(x = factor(Missing_Online), y = Average_Exam_Grade)) +
  geom_bar(stat = "identity", fill = "blue") +
  labs(
    title = "Average Exam Grade Conditioned by Missing Online Test Grades",
    x = "Missing Online Test Grades",
    y = "Average Exam Grade"
  ) +
  scale_x_discrete(labels = seq(0, max(exam_vs_missing_online$Missing_Online), 1))
```
Represent graphically the distribution of the grades at the Exam conditioned by the number of missing grades for the online tests. Notice that this cannot be done directly using the table
obtained in the previous question. 

It is recommended to use the row-wise functionality of dplyr to perform the calculations needed for this question, starting with the original data frame (not the long format one) and leveraging the c_across function. In this approach, columns can be selected with the
starts_with function. 
```{r}
grades_with_na_online_test <- grades |>
  rowwise() |>
  mutate(na_online_test_per_student2 = sum(is.na(c_across(starts_with("Online_MCQ_")))))
```

```{r}
# Alternative :
grades_with_na_online_test2 <- inner_join(grades, na_online_test_per_student, by = join_by(Id))
```

```{r}
grades_with_na_online_test |> ggplot(aes(x = Exam, fill = na_online_test_per_student2, color = na_online_test_per_student2)) + geom_histogram()
```
```{r}
grades_with_na_online_test |> ggplot(aes(x = Exam, group = na_online_test_per_student2, color = na_online_test_per_student2))+ geom_density(bw = "SJ")
```
```{r}
ggplot(grades_with_na_online_test, aes(x = Exam, y=na_online_test_per_student2, fill = na_online_test_per_student2)) +
  geom_boxplot()
```
```{r}
ggplot(grades_with_na_online_test, aes(x = Exam, fill = na_online_test_per_student2, color = na_online_test_per_student2)) +
  geom_bar() 
```
